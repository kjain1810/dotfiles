" Generic
set number
set ts=4 sw=4
syntax on
set autoindent

" For search and replace
vnoremap <C-r> "hy:%s/<C-r>h//gc<left><left><left>

" NERDTree
let NERDTreeShowHidden=1

" Pathogen
" execute pathogen#infect()

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_enable_racket_racket_checker = 1

" Vim Plug
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin()

Plug 'fatih/vim-go', { 'tag': '*' }
Plug 'nsf/gocode', { 'tag': '*', 'rtp': 'vim' }
Plug 'tpope/vim-fireplace', { 'for': 'clojure' }
Plug 'Yggdroot/indentLine', { 'tag': '*' }
Plug 'vim-scripts/indentpython.vim', {'tag': '*'}
Plug 'tmhedberg/SimpylFold', {'tag': '*'}
" Plug 'frazrepo/vim-rainbow'
" Plug 'ycm-core/YouCompleteMe'
Plug 'wlangstroth/vim-racket'
Plug 'xavierd/clang_complete'
" Plug 'vim-scripts/indentpython.vim'
Plug 'nvie/vim-flake8'
Plug 'jnurmine/Zenburn'
Plug 'tpope/vim-fugitive'
" Plug 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
Plug 'vim-airline/vim-airline'
Plug 'skanehira/denops-docker.vim'

call plug#end()

" YouCompleteMe
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>

" Cursorn
" let $NVIM_TUI_ENABLE_CURSOR_SHAPE = 0

